#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// Fifo
	c43 [label=<<table title="Fifo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Fifo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Fifo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lifoOne : Lifo </td></tr>
<tr><td align="left" balign="left"> - lifoTwo : Lifo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Fifo(arraySize : int) </td></tr>
<tr><td align="left" balign="left"> + display() </td></tr>
<tr><td align="left" balign="left"> + head() : int </td></tr>
<tr><td align="left" balign="left"> + pop() : int </td></tr>
<tr><td align="left" balign="left"> - popHelper(stack1 : Lifo, stack2 : Lifo) </td></tr>
<tr><td align="left" balign="left"> + push(x : int) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// Lifo
	c44 [label=<<table title="Lifo" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./Lifo.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Lifo </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Lifo(arraySize : int) </td></tr>
<tr><td align="left" balign="left"> + head() : int </td></tr>
<tr><td align="left" balign="left"> + pop() : int </td></tr>
<tr><td align="left" balign="left"> + get(i : int) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// StackAbstract
	c47 [label=<<table title="StackAbstract" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./StackAbstract.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> StackAbstract </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # top : int </td></tr>
<tr><td align="left" balign="left"> ~ size : int </td></tr>
<tr><td align="left" balign="left"> ~ stack : int[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + StackAbstract() </td></tr>
<tr><td align="left" balign="left"> + display() </td></tr>
<tr><td align="left" balign="left"> + getSize() : int </td></tr>
<tr><td align="left" balign="left"> + getNumberOfElements() : int </td></tr>
<tr><td align="left" balign="left"> + isFull() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + push(x : int) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + head() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + pop() : int </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//Fifo extends StackAbstract
	c47:p -> c43:p [dir=back,arrowtail=empty];
	//Lifo extends StackAbstract
	c47:p -> c44:p [dir=back,arrowtail=empty];
	// Fifo NAVASSOC Lifo
	c43:p -> c44:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// Fifo NAVASSOC Lifo
	c43:p -> c44:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
}

